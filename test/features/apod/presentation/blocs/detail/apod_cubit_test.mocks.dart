// Mocks generated by Mockito 5.3.2 from annotations
// in socle/test/features/apod/presentation/blocs/detail/apod_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:socle/core/domain/entities/result.dart' as _i3;
import 'package:socle/features/apod/domain/entities/apod_entity.dart' as _i6;
import 'package:socle/features/apod/domain/repositories/apod_repository.dart'
    as _i2;
import 'package:socle/features/apod/domain/usecases/get_apod_media_usecase.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApodRepository_0 extends _i1.SmartFake
    implements _i2.ApodRepository {
  _FakeApodRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_1<T> extends _i1.SmartFake implements _i3.Result<T> {
  _FakeResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetApodMediaUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetApodMediaUseCase extends _i1.Mock
    implements _i4.GetApodMediaUseCase {
  MockGetApodMediaUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApodRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApodRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ApodRepository);
  @override
  _i5.Future<_i3.Result<List<_i6.ApodEntity>>> call(
          _i4.GetApodMediaUseCaseParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Future<_i3.Result<List<_i6.ApodEntity>>>.value(
            _FakeResult_1<List<_i6.ApodEntity>>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.Result<List<_i6.ApodEntity>>>);
}
